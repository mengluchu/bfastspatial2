% Generated by roxygen2 (4.0.2): do not edit by hand
\name{flattenBrick}
\alias{flattenBrick}
\title{Convert a RasterBrick or RasterStack to a RasterLayer based on the first encountered value}
\usage{
flattenBrick(x, thresh = NULL, ...)
}
\arguments{
\item{x}{RasterBrick or RasterStack.}

\item{thresh}{Numeric. Optional: threshold to apply to preceding values in deciding whether to mask subsequent values.}

\item{...}{Additional arguments to be bassed to \code{\link{mc.calc}}.}
}
\value{
RasterLayer with values representing 'earliest' encountered values not exceeding \code{thresh}.
}
\description{
Flatten a brick by iteratively masking layer values by non-NA values in preceding layers. An optional threshold can be supplied, where preceding values exceeding the threshold are ignored in the masking procedure (and are therefore themselves removed).
}
\details{
\code{thresh} only works on a 'greater-than' basis. To achieve the reverse, first let \code{x <- -1*x} then convert the result back by \code{y <- -1*y}.
}
\examples{
# load Tura dataset
data(tura)

## apply a very crude gap-fill using 2 Landsat
# the 1st layer has alot of gaps from the cloud mask
# suppose this is our target image and we want to use the 2nd layer to fill
# just take these two layers
gapfill <- tura[[c(1:2)]]
names(gapfill) <- c("target", "fill")
plot(gapfill)

# flatten the Brick to fill the gaps (NA's in the 1st layer)
filled <- flattenBrick(gapfill)
plot(filled)
}
\author{
Ben DeVries
}

